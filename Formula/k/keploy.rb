class Keploy < Formula
  desc "Testing Toolkit creates test-cases and data mocks from API calls, DB queries"
  homepage "https://keploy.io"
  url "https://github.com/keploy/keploy/archive/refs/tags/v2.10.27.tar.gz"
  sha256 "d0f2eb738f7fc191012756359ef697676219035e419dee0716a9d6fd0bc92a4d"
  license "Apache-2.0"
  head "https://github.com/keploy/keploy.git", branch: "main"

  bottle do
    sha256 cellar: :any_skip_relocation, arm64_tahoe:   "fed704ab157f36986ba6847d43f4bc5a44328c424e746465772611529632c849"
    sha256 cellar: :any_skip_relocation, arm64_sequoia: "fed704ab157f36986ba6847d43f4bc5a44328c424e746465772611529632c849"
    sha256 cellar: :any_skip_relocation, arm64_sonoma:  "fed704ab157f36986ba6847d43f4bc5a44328c424e746465772611529632c849"
    sha256 cellar: :any_skip_relocation, sonoma:        "2a82480edee39946e8adc01b04aa686ccae84529426472ae5233dd76376265a0"
    sha256 cellar: :any_skip_relocation, x86_64_linux:  "df5900ef31d2505857097a5bf4c2991fa6996f8d57611bff884e992625f12e7a"
  end

  depends_on "go" => :build

  def install
    system "go", "build", *std_go_args(ldflags: "-s -w -X main.version=#{version}")
  end

  test do
    system bin/"keploy", "config", "--generate", "--path", testpath
    assert_match "# Generated by Keploy", (testpath/"keploy.yml").read

    output = shell_output("#{bin}/keploy templatize --path #{testpath}")
    assert_match "No test sets found to templatize", output

    assert_match version.to_s, shell_output("#{bin}/keploy --version")
  end
end
